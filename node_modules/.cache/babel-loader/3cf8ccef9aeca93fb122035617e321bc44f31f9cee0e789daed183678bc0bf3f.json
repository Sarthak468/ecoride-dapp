{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barot\\\\OneDrive\\\\Desktop\\\\peer pool - Copy\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [rides, setRides] = useState([]);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  useEffect(() => {\n    const storedRides = JSON.parse(localStorage.getItem(\"ecoRides\")) || [];\n    setRides(storedRides);\n  }, []);\n  const saveRides = updatedRides => {\n    setRides(updatedRides);\n    localStorage.setItem(\"ecoRides\", JSON.stringify(updatedRides));\n  };\n  const getStatusText = status => {\n    if (status === \"NotStarted\") return \"Not Started\";\n    if (status === \"Ongoing\") return \"Ongoing\";\n    if (status === \"Completed\") return \"Completed\";\n    return \"Unknown\";\n  };\n  const handleSelectRide = async (rideId, driverAddr, rideAmount) => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is not installed!\");\n      return;\n    }\n    try {\n      // Request user account from MetaMask\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const user = accounts[0];\n\n      // Convert the ride amount (string in ETH) to hex Wei\n      const amountInWei = (parseFloat(rideAmount) * 1e18).toString(16); // hex string\n\n      // Build transaction params\n      const transactionParams = {\n        from: user,\n        to: driverAddr,\n        value: \"0x\" + amountInWei\n      };\n\n      // Send transaction\n      await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParams]\n      });\n\n      // If transaction succeeds, mark ride as \"Ongoing\"\n      const updatedRides = rides.map(ride => ride.id === rideId ? {\n        ...ride,\n        status: \"Ongoing\"\n      } : ride);\n      saveRides(updatedRides);\n      setStatusMessage(\"Ride selected & paid successfully!\");\n    } catch (error) {\n      console.error(\"Error selecting ride:\", error);\n      setStatusMessage(\"Error selecting ride or transaction canceled.\");\n    }\n  };\n  const availableRides = rides.filter(ride => ride.status === \"NotStarted\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard - Available Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRides(JSON.parse(localStorage.getItem(\"ecoRides\")) || []),\n      children: \"Refresh Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), availableRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rides available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRides.map(ride => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), \" \", ride.source, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destination:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), \" \", ride.destination, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), \" \", ride.seats, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), \" \", ride.amount, \" ETH |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Driver:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), \" \", ride.driverAddress, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), \" \", getStatusText(ride.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), ride.status === \"NotStarted\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectRide(ride.id, ride.driverAddress, ride.amount),\n          children: \"Select & Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, ride.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"oEWmRHypxXwWF65qr7S/Q6Uq+3c=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDashboard","_s","rides","setRides","statusMessage","setStatusMessage","storedRides","JSON","parse","localStorage","getItem","saveRides","updatedRides","setItem","stringify","getStatusText","status","handleSelectRide","rideId","driverAddr","rideAmount","window","ethereum","alert","accounts","request","method","user","amountInWei","parseFloat","toString","transactionParams","from","to","value","params","map","ride","id","error","console","availableRides","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","marginBottom","source","destination","seats","amount","driverAddress","_c","$RefreshReg$"],"sources":["C:/Users/barot/OneDrive/Desktop/peer pool - Copy/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction UserDashboard() {\r\n  const [rides, setRides] = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedRides = JSON.parse(localStorage.getItem(\"ecoRides\")) || [];\r\n    setRides(storedRides);\r\n  }, []);\r\n\r\n  const saveRides = (updatedRides) => {\r\n    setRides(updatedRides);\r\n    localStorage.setItem(\"ecoRides\", JSON.stringify(updatedRides));\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    if (status === \"NotStarted\") return \"Not Started\";\r\n    if (status === \"Ongoing\") return \"Ongoing\";\r\n    if (status === \"Completed\") return \"Completed\";\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const handleSelectRide = async (rideId, driverAddr, rideAmount) => {\r\n    if (!window.ethereum) {\r\n      alert(\"MetaMask is not installed!\");\r\n      return;\r\n    }\r\n    try {\r\n      // Request user account from MetaMask\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const user = accounts[0];\r\n\r\n      // Convert the ride amount (string in ETH) to hex Wei\r\n      const amountInWei = (parseFloat(rideAmount) * 1e18).toString(16); // hex string\r\n\r\n      // Build transaction params\r\n      const transactionParams = {\r\n        from: user,\r\n        to: driverAddr,\r\n        value: \"0x\" + amountInWei\r\n      };\r\n\r\n      // Send transaction\r\n      await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params: [transactionParams]\r\n      });\r\n\r\n      // If transaction succeeds, mark ride as \"Ongoing\"\r\n      const updatedRides = rides.map((ride) =>\r\n        ride.id === rideId ? { ...ride, status: \"Ongoing\" } : ride\r\n      );\r\n      saveRides(updatedRides);\r\n      setStatusMessage(\"Ride selected & paid successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error selecting ride:\", error);\r\n      setStatusMessage(\"Error selecting ride or transaction canceled.\");\r\n    }\r\n  };\r\n\r\n  const availableRides = rides.filter((ride) => ride.status === \"NotStarted\");\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Dashboard - Available Rides</h2>\r\n      <button\r\n        onClick={() => setRides(JSON.parse(localStorage.getItem(\"ecoRides\")) || [])}\r\n      >\r\n        Refresh Rides\r\n      </button>\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n      {availableRides.length === 0 ? (\r\n        <p>No rides available at the moment.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRides.map((ride) => (\r\n            <li key={ride.id} style={{ marginBottom: \"10px\" }}>\r\n              <div>\r\n                <strong>Source:</strong> {ride.source} |{\" \"}\r\n                <strong>Destination:</strong> {ride.destination} |{\" \"}\r\n                <strong>Seats:</strong> {ride.seats} |{\" \"}\r\n                <strong>Amount:</strong> {ride.amount} ETH |{\" \"}\r\n                <strong>Driver:</strong> {ride.driverAddress} |{\" \"}\r\n                <strong>Status:</strong> {getStatusText(ride.status)}\r\n              </div>\r\n              {ride.status === \"NotStarted\" && (\r\n                <button\r\n                  onClick={() =>\r\n                    handleSelectRide(ride.id, ride.driverAddress, ride.amount)\r\n                  }\r\n                >\r\n                  Select & Pay\r\n                </button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}