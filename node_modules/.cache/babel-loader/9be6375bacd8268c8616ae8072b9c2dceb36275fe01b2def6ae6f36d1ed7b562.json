{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barot\\\\OneDrive\\\\Desktop\\\\EcoRide\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { web3, rideSharingContract } from \"../web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [matchingRide, setMatchingRide] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Poll the chain for rides every 2 seconds\n  useEffect(() => {\n    loadRide();\n    const interval = setInterval(loadRide, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Loads all rides, filters for Saskatoon→Regina, seats=1, amount=0.5 ETH\n  const loadRide = async () => {\n    console.log(\"Inside loadRide in UserDashboard\");\n    try {\n      // Ensure MetaMask accounts are requested\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Requesting rideCount in UserDashboard...\");\n      const rideCount = await rideSharingContract.methods.rideCount().call();\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\n      let found = null;\n      for (let i = 1; i <= rideCount; i++) {\n        const ride = await rideSharingContract.methods.rides(i).call();\n        // Convert ride.amount (wei) to ETH for comparison\n        const amountEth = parseFloat(web3.utils.fromWei(ride.amount, \"ether\"));\n\n        // Check if it matches the exact route\n        if (ride.source === \"Saskatoon\" && ride.destination === \"Regina\" && parseInt(ride.seats) === 1 && amountEth === 0.5) {\n          // This is the matching ride we want\n          ride.amountEth = \"0.5\";\n          found = ride;\n          break;\n        }\n      }\n      if (found) {\n        console.log(\"Found the Saskatoon→Regina ride on-chain:\", found);\n        setMatchingRide(found);\n      } else {\n        console.log(\"No matching ride found for Saskatoon→Regina, seats=1, 0.5 ETH\");\n        setMatchingRide(null);\n      }\n    } catch (error) {\n      console.error(\"Error loading ride in UserDashboard:\", error);\n      alert(\"Error in loadRide (UserDashboard): \" + error.message);\n    }\n  };\n\n  // Select & pay for the matching ride\n  const handleSelectRide = async () => {\n    if (!matchingRide) return;\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const user = accounts[0];\n      console.log(\"Selecting ride ID:\", matchingRide.id, \"for 0.5 ETH\");\n      await rideSharingContract.methods.selectRide(matchingRide.id).send({\n        from: user,\n        value: matchingRide.amount\n      });\n      setStatusMessage(\"Ride selected & paid successfully!\");\n      // After paying, the ride’s status on-chain becomes Ongoing\n      // This user dashboard will see that status if you read rides again\n      loadRide();\n    } catch (error) {\n      console.error(\"Error selecting ride:\", error);\n      setStatusMessage(\"Transaction failed or canceled.\");\n    }\n  };\n\n  // Helper: convert numeric status string to text\n  const getStatusText = status => {\n    if (status === \"0\") return \"Not Started\";\n    if (status === \"1\") return \"Ongoing\";\n    if (status === \"2\") return \"Completed\";\n    return \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard - Available Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      children: [\"This dashboard only shows a ride if the driver has proposed:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \"Source: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Saskatoon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), \", Destination: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Regina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 58\n      }, this), \", Seats: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 90\n      }, this), \", Amount: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"0.5 ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 118\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadRide,\n      children: \"Refresh Ride\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }, this), !matchingRide ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No matching ride found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Source:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), \" \", matchingRide.source, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), \" \", matchingRide.destination, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Seats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), \" \", matchingRide.seats, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), \" \", parseFloat(matchingRide.amountEth).toFixed(3), \" ETH |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), \" \", getStatusText(matchingRide.status), matchingRide.status === \"0\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        onClick: handleSelectRide,\n        children: \"Select & Pay (0.5 ETH)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"zGdSFNzK84G6iwHGu1iE09kDuBQ=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","web3","rideSharingContract","jsxDEV","_jsxDEV","UserDashboard","_s","matchingRide","setMatchingRide","statusMessage","setStatusMessage","loadRide","interval","setInterval","clearInterval","console","log","window","ethereum","request","method","rideCount","methods","call","found","i","ride","rides","amountEth","parseFloat","utils","fromWei","amount","source","destination","parseInt","seats","error","alert","message","handleSelectRide","accounts","user","id","selectRide","send","from","value","getStatusText","status","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fontStyle","onClick","marginTop","toFixed","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/barot/OneDrive/Desktop/EcoRide/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { web3, rideSharingContract } from \"../web3\";\r\n\r\nfunction UserDashboard() {\r\n  const [matchingRide, setMatchingRide] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  // Poll the chain for rides every 2 seconds\r\n  useEffect(() => {\r\n    loadRide();\r\n    const interval = setInterval(loadRide, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Loads all rides, filters for Saskatoon→Regina, seats=1, amount=0.5 ETH\r\n  const loadRide = async () => {\r\n    console.log(\"Inside loadRide in UserDashboard\");\r\n    try {\r\n      // Ensure MetaMask accounts are requested\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n\r\n      console.log(\"Requesting rideCount in UserDashboard...\");\r\n      const rideCount = await rideSharingContract.methods.rideCount().call();\r\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\r\n\r\n      let found = null;\r\n\r\n      for (let i = 1; i <= rideCount; i++) {\r\n        const ride = await rideSharingContract.methods.rides(i).call();\r\n        // Convert ride.amount (wei) to ETH for comparison\r\n        const amountEth = parseFloat(web3.utils.fromWei(ride.amount, \"ether\"));\r\n\r\n        // Check if it matches the exact route\r\n        if (\r\n          ride.source === \"Saskatoon\" &&\r\n          ride.destination === \"Regina\" &&\r\n          parseInt(ride.seats) === 1 &&\r\n          amountEth === 0.5\r\n        ) {\r\n          // This is the matching ride we want\r\n          ride.amountEth = \"0.5\";\r\n          found = ride;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        console.log(\"Found the Saskatoon→Regina ride on-chain:\", found);\r\n        setMatchingRide(found);\r\n      } else {\r\n        console.log(\"No matching ride found for Saskatoon→Regina, seats=1, 0.5 ETH\");\r\n        setMatchingRide(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading ride in UserDashboard:\", error);\r\n      alert(\"Error in loadRide (UserDashboard): \" + error.message);\r\n    }\r\n  };\r\n\r\n  // Select & pay for the matching ride\r\n  const handleSelectRide = async () => {\r\n    if (!matchingRide) return;\r\n    try {\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const user = accounts[0];\r\n\r\n      console.log(\"Selecting ride ID:\", matchingRide.id, \"for 0.5 ETH\");\r\n      await rideSharingContract.methods\r\n        .selectRide(matchingRide.id)\r\n        .send({ from: user, value: matchingRide.amount });\r\n\r\n      setStatusMessage(\"Ride selected & paid successfully!\");\r\n      // After paying, the ride’s status on-chain becomes Ongoing\r\n      // This user dashboard will see that status if you read rides again\r\n      loadRide();\r\n    } catch (error) {\r\n      console.error(\"Error selecting ride:\", error);\r\n      setStatusMessage(\"Transaction failed or canceled.\");\r\n    }\r\n  };\r\n\r\n  // Helper: convert numeric status string to text\r\n  const getStatusText = (status) => {\r\n    if (status === \"0\") return \"Not Started\";\r\n    if (status === \"1\") return \"Ongoing\";\r\n    if (status === \"2\") return \"Completed\";\r\n    return \"Unknown\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Dashboard - Available Rides</h2>\r\n      <p style={{ fontStyle: \"italic\" }}>\r\n        This dashboard only shows a ride if the driver has proposed:\r\n        <br />\r\n        Source: <strong>Saskatoon</strong>, Destination: <strong>Regina</strong>, Seats: <strong>1</strong>, Amount: <strong>0.5 ETH</strong>\r\n      </p>\r\n      <button onClick={loadRide}>Refresh Ride</button>\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n\r\n      {!matchingRide ? (\r\n        <p>No matching ride found.</p>\r\n      ) : (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <strong>Source:</strong> {matchingRide.source} |{\" \"}\r\n          <strong>Destination:</strong> {matchingRide.destination} |{\" \"}\r\n          <strong>Seats:</strong> {matchingRide.seats} |{\" \"}\r\n          <strong>Amount:</strong> {parseFloat(matchingRide.amountEth).toFixed(3)} ETH |{\" \"}\r\n          <strong>Status:</strong> {getStatusText(matchingRide.status)}\r\n          {matchingRide.status === \"0\" && (\r\n            <button\r\n              style={{ marginLeft: \"20px\" }}\r\n              onClick={handleSelectRide}\r\n            >\r\n              Select &amp; Pay (0.5 ETH)\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}