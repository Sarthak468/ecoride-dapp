{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barot\\\\OneDrive\\\\Desktop\\\\EcoRide\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { web3, rideSharingContract } from \"../web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [ride, setRide] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // Convert numeric status to text\n  const getStatusText = status => {\n    const numericStatus = parseInt(status, 10);\n    if (numericStatus === 0) return \"Not Started\";\n    if (numericStatus === 1) return \"Ongoing\";\n    if (numericStatus === 2) return \"Completed\";\n    return \"Unknown\";\n  };\n\n  // Load only the single latest ride from the contract\n  const loadLatestRide = async () => {\n    console.log(\"Inside loadLatestRide in UserDashboard\");\n    try {\n      // Ensure MetaMask accounts are requested\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Requesting rideCount in UserDashboard...\");\n      const rideCount = await rideSharingContract.methods.rideCount().call();\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\n      if (parseInt(rideCount, 10) === 0) {\n        console.log(\"No rides found on-chain; setting ride to null.\");\n        setRide(null);\n      } else {\n        // Fetch only the ride with ID = rideCount (the newest ride)\n        const latestId = parseInt(rideCount, 10);\n        console.log(\"Fetching the newest ride with ID =\", latestId);\n        const fetchedRide = await rideSharingContract.methods.rides(latestId).call();\n        fetchedRide.amountEth = web3.utils.fromWei(fetchedRide.amount, \"ether\");\n        console.log(\"Newest ride data:\", fetchedRide);\n        setRide(fetchedRide);\n      }\n    } catch (error) {\n      console.error(\"Error loading ride in UserDashboard:\", error);\n      alert(\"Error in loadLatestRide (UserDashboard): \" + error.message);\n    }\n  };\n  useEffect(() => {\n    loadLatestRide();\n  }, []);\n\n  // Handle selecting & paying for the ride\n  const handleSelectRide = async () => {\n    if (!ride) return;\n    try {\n      console.log(\"Selecting ride ID:\", ride.id, \"for wei:\", ride.amount);\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const user = accounts[0];\n      await rideSharingContract.methods.selectRide(ride.id).send({\n        from: user,\n        value: ride.amount\n      });\n      setStatusMessage(\"Ride selected & paid successfully!\");\n      // After paying, the ride status changes to Ongoing on-chain\n      loadLatestRide(); // Reload to see updated status\n    } catch (error) {\n      console.error(\"Error selecting ride:\", error);\n      setStatusMessage(\"Transaction failed or canceled.\");\n    }\n  };\n\n  // If there's a ride, check its status\n  const rideStatusText = ride ? getStatusText(ride.status) : null;\n  const isNotStarted = ride && parseInt(ride.status, 10) === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard - Latest Ride\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadLatestRide,\n      children: \"Refresh Ride\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), !ride ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rides found on-chain.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Source:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \" \", ride.source, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Destination:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), \" \", ride.destination, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Seats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), \" \", ride.seats, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), \" \", ride.amountEth, \" ETH |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), \" \", rideStatusText, isNotStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        onClick: handleSelectRide,\n        children: \"Select & Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"PDazBYn8jOXtWzDvpHm9OAaBptE=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","web3","rideSharingContract","jsxDEV","_jsxDEV","UserDashboard","_s","ride","setRide","statusMessage","setStatusMessage","getStatusText","status","numericStatus","parseInt","loadLatestRide","console","log","window","ethereum","request","method","rideCount","methods","call","latestId","fetchedRide","rides","amountEth","utils","fromWei","amount","error","alert","message","handleSelectRide","id","accounts","user","selectRide","send","from","value","rideStatusText","isNotStarted","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","source","destination","seats","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/barot/OneDrive/Desktop/EcoRide/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { web3, rideSharingContract } from \"../web3\";\r\n\r\nfunction UserDashboard() {\r\n  const [ride, setRide] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  // Convert numeric status to text\r\n  const getStatusText = (status) => {\r\n    const numericStatus = parseInt(status, 10);\r\n    if (numericStatus === 0) return \"Not Started\";\r\n    if (numericStatus === 1) return \"Ongoing\";\r\n    if (numericStatus === 2) return \"Completed\";\r\n    return \"Unknown\";\r\n  };\r\n\r\n  // Load only the single latest ride from the contract\r\n  const loadLatestRide = async () => {\r\n    console.log(\"Inside loadLatestRide in UserDashboard\");\r\n    try {\r\n      // Ensure MetaMask accounts are requested\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      console.log(\"Requesting rideCount in UserDashboard...\");\r\n      const rideCount = await rideSharingContract.methods.rideCount().call();\r\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\r\n\r\n      if (parseInt(rideCount, 10) === 0) {\r\n        console.log(\"No rides found on-chain; setting ride to null.\");\r\n        setRide(null);\r\n      } else {\r\n        // Fetch only the ride with ID = rideCount (the newest ride)\r\n        const latestId = parseInt(rideCount, 10);\r\n        console.log(\"Fetching the newest ride with ID =\", latestId);\r\n        const fetchedRide = await rideSharingContract.methods.rides(latestId).call();\r\n        fetchedRide.amountEth = web3.utils.fromWei(fetchedRide.amount, \"ether\");\r\n        console.log(\"Newest ride data:\", fetchedRide);\r\n        setRide(fetchedRide);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading ride in UserDashboard:\", error);\r\n      alert(\"Error in loadLatestRide (UserDashboard): \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLatestRide();\r\n  }, []);\r\n\r\n  // Handle selecting & paying for the ride\r\n  const handleSelectRide = async () => {\r\n    if (!ride) return;\r\n    try {\r\n      console.log(\"Selecting ride ID:\", ride.id, \"for wei:\", ride.amount);\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const user = accounts[0];\r\n\r\n      await rideSharingContract.methods\r\n        .selectRide(ride.id)\r\n        .send({ from: user, value: ride.amount });\r\n\r\n      setStatusMessage(\"Ride selected & paid successfully!\");\r\n      // After paying, the ride status changes to Ongoing on-chain\r\n      loadLatestRide(); // Reload to see updated status\r\n    } catch (error) {\r\n      console.error(\"Error selecting ride:\", error);\r\n      setStatusMessage(\"Transaction failed or canceled.\");\r\n    }\r\n  };\r\n\r\n  // If there's a ride, check its status\r\n  const rideStatusText = ride ? getStatusText(ride.status) : null;\r\n  const isNotStarted = ride && parseInt(ride.status, 10) === 0;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Dashboard - Latest Ride</h2>\r\n      <button onClick={loadLatestRide}>Refresh Ride</button>\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n\r\n      {!ride ? (\r\n        <p>No rides found on-chain.</p>\r\n      ) : (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <strong>Source:</strong> {ride.source} |{\" \"}\r\n          <strong>Destination:</strong> {ride.destination} |{\" \"}\r\n          <strong>Seats:</strong> {ride.seats} |{\" \"}\r\n          <strong>Amount:</strong> {ride.amountEth} ETH |{\" \"}\r\n          <strong>Status:</strong> {rideStatusText}\r\n          {isNotStarted && (\r\n            <button style={{ marginLeft: \"20px\" }} onClick={handleSelectRide}>\r\n              Select &amp; Pay\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}