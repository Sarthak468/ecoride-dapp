{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barot\\\\OneDrive\\\\Desktop\\\\peer pool - Copy\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [rides, setRides] = useState([]);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n\n  // On mount, load rides from localStorage\n  useEffect(() => {\n    const storedRides = JSON.parse(localStorage.getItem(\"ecoRides\")) || [];\n    setRides(storedRides);\n  }, []);\n\n  // Save rides to localStorage + state\n  const saveRides = updatedRides => {\n    setRides(updatedRides);\n    localStorage.setItem(\"ecoRides\", JSON.stringify(updatedRides));\n  };\n  const getStatusText = status => {\n    if (status === \"NotStarted\") return \"Not Started\";\n    if (status === \"Ongoing\") return \"Ongoing\";\n    if (status === \"Completed\") return \"Completed\";\n    return \"Unknown\";\n  };\n  const handleSelectRide = rideId => {\n    // Mark the ride as \"Ongoing\"\n    const updatedRides = rides.map(ride => ride.id === rideId ? {\n      ...ride,\n      status: \"Ongoing\"\n    } : ride);\n    saveRides(updatedRides);\n    setStatusMessage(\"Ride selected successfully!\");\n  };\n\n  // Filter only \"NotStarted\" rides\n  const availableRides = rides.filter(ride => ride.status === \"NotStarted\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard - Available Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setRides(JSON.parse(localStorage.getItem(\"ecoRides\")) || []),\n      children: \"Refresh Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this), availableRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rides available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRides.map(ride => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), \" \", ride.source, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destination:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), \" \", ride.destination, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), \" \", ride.seats, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), \" \", ride.amount, \" ETH |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), \" \", getStatusText(ride.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), ride.status === \"NotStarted\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectRide(ride.id),\n          children: \"Select & Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, ride.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"oEWmRHypxXwWF65qr7S/Q6Uq+3c=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDashboard","_s","rides","setRides","statusMessage","setStatusMessage","storedRides","JSON","parse","localStorage","getItem","saveRides","updatedRides","setItem","stringify","getStatusText","status","handleSelectRide","rideId","map","ride","id","availableRides","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","marginBottom","source","destination","seats","amount","_c","$RefreshReg$"],"sources":["C:/Users/barot/OneDrive/Desktop/peer pool - Copy/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction UserDashboard() {\r\n  const [rides, setRides] = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  // On mount, load rides from localStorage\r\n  useEffect(() => {\r\n    const storedRides = JSON.parse(localStorage.getItem(\"ecoRides\")) || [];\r\n    setRides(storedRides);\r\n  }, []);\r\n\r\n  // Save rides to localStorage + state\r\n  const saveRides = (updatedRides) => {\r\n    setRides(updatedRides);\r\n    localStorage.setItem(\"ecoRides\", JSON.stringify(updatedRides));\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    if (status === \"NotStarted\") return \"Not Started\";\r\n    if (status === \"Ongoing\") return \"Ongoing\";\r\n    if (status === \"Completed\") return \"Completed\";\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const handleSelectRide = (rideId) => {\r\n    // Mark the ride as \"Ongoing\"\r\n    const updatedRides = rides.map((ride) =>\r\n      ride.id === rideId ? { ...ride, status: \"Ongoing\" } : ride\r\n    );\r\n    saveRides(updatedRides);\r\n    setStatusMessage(\"Ride selected successfully!\");\r\n  };\r\n\r\n  // Filter only \"NotStarted\" rides\r\n  const availableRides = rides.filter((ride) => ride.status === \"NotStarted\");\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Dashboard - Available Rides</h2>\r\n      <button\r\n        onClick={() => setRides(JSON.parse(localStorage.getItem(\"ecoRides\")) || [])}\r\n      >\r\n        Refresh Rides\r\n      </button>\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n      {availableRides.length === 0 ? (\r\n        <p>No rides available at the moment.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRides.map((ride) => (\r\n            <li key={ride.id} style={{ marginBottom: \"10px\" }}>\r\n              <div>\r\n                <strong>Source:</strong> {ride.source} |{\" \"}\r\n                <strong>Destination:</strong> {ride.destination} |{\" \"}\r\n                <strong>Seats:</strong> {ride.seats} |{\" \"}\r\n                <strong>Amount:</strong> {ride.amount} ETH |{\" \"}\r\n                <strong>Status:</strong> {getStatusText(ride.status)}\r\n              </div>\r\n              {ride.status === \"NotStarted\" && (\r\n                <button onClick={() => handleSelectRide(ride.id)}>\r\n                  Select &amp; Pay\r\n                </button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}