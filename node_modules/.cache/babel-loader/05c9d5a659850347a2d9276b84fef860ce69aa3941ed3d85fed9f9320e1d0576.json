{"ast":null,"code":"import Web3 from \"web3\";\nimport RideSharing from \"./RideSharing.json\"; // The ABI JSON from your build\n\nlet web3;\nlet rideSharingContract;\n\n// Check if MetaMask is present\nif (window.ethereum) {\n  web3 = new Web3(window.ethereum);\n\n  // Replace with your deployed contract address\n  const contractAddress = \"0x795B54B52AE2C7E26d49033Ab788F917B3DFb236\";\n\n  // Create the contract instance\n  rideSharingContract = new web3.eth.Contract(RideSharing.abi, contractAddress);\n} else {\n  alert(\"MetaMask not detected. Please install MetaMask!\");\n}\nexport { web3, rideSharingContract };","map":{"version":3,"names":["Web3","RideSharing","web3","rideSharingContract","window","ethereum","contractAddress","eth","Contract","abi","alert"],"sources":["C:/Users/barot/OneDrive/Desktop/peer pool - Copy/frontend/src/web3.js"],"sourcesContent":["import Web3 from \"web3\";\r\nimport RideSharing from \"./RideSharing.json\"; // The ABI JSON from your build\r\n\r\nlet web3;\r\nlet rideSharingContract;\r\n\r\n// Check if MetaMask is present\r\nif (window.ethereum) {\r\n  web3 = new Web3(window.ethereum);\r\n\r\n  // Replace with your deployed contract address\r\n  const contractAddress = \"0x795B54B52AE2C7E26d49033Ab788F917B3DFb236\";\r\n  \r\n  // Create the contract instance\r\n  rideSharingContract = new web3.eth.Contract(RideSharing.abi, contractAddress);\r\n} else {\r\n  alert(\"MetaMask not detected. Please install MetaMask!\");\r\n}\r\n\r\nexport { web3, rideSharingContract };\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,oBAAoB,CAAC,CAAC;;AAE9C,IAAIC,IAAI;AACR,IAAIC,mBAAmB;;AAEvB;AACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;EACnBH,IAAI,GAAG,IAAIF,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC;;EAEhC;EACA,MAAMC,eAAe,GAAG,4CAA4C;;EAEpE;EACAH,mBAAmB,GAAG,IAAID,IAAI,CAACK,GAAG,CAACC,QAAQ,CAACP,WAAW,CAACQ,GAAG,EAAEH,eAAe,CAAC;AAC/E,CAAC,MAAM;EACLI,KAAK,CAAC,iDAAiD,CAAC;AAC1D;AAEA,SAASR,IAAI,EAAEC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}