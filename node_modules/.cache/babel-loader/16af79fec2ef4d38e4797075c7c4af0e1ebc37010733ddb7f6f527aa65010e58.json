{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barot\\\\OneDrive\\\\Desktop\\\\EcoRide\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { web3, rideSharingContract } from \"../web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [rides, setRides] = useState([]);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const getStatusText = status => {\n    if (status === \"0\") return \"Not Started\";\n    if (status === \"1\") return \"Ongoing\";\n    if (status === \"2\") return \"Completed\";\n    return \"Unknown\";\n  };\n  const loadRides = async () => {\n    console.log(\"Inside loadRides in UserDashboard\");\n    try {\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Requesting rideCount in UserDashboard...\");\n      const rideCount = await rideSharingContract.methods.rideCount().call();\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\n      let ridesArray = [];\n      for (let i = 1; i <= rideCount; i++) {\n        const ride = await rideSharingContract.methods.rides(i).call();\n        ride.amountEth = web3.utils.fromWei(ride.amount, \"ether\");\n        ridesArray.push(ride);\n      }\n      // If no rides exist on-chain, add the default dummy ride.\n      if (ridesArray.length === 0) {\n        console.log(\"No rides found on-chain; adding dummy ride.\");\n        ridesArray.push({\n          id: \"dummy\",\n          driver: \"0x0000000000000000000000000000000000000000\",\n          source: \"Saskatoon\",\n          destination: \"Regina\",\n          seats: \"1\",\n          amount: web3.utils.toWei(\"0.5\", \"ether\"),\n          amountEth: \"0.5\",\n          status: \"0\",\n          // Not Started\n          user: \"0x0000000000000000000000000000000000000000\"\n        });\n      }\n      setRides(ridesArray);\n    } catch (error) {\n      console.error(\"Error loading rides in UserDashboard:\", error);\n      alert(\"Error in loadRides (UserDashboard): \" + error.message);\n    }\n  };\n  useEffect(() => {\n    loadRides();\n    // Poll every 2 seconds for new rides\n    const interval = setInterval(loadRides, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSelectRide = async (rideId, rideWei) => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const user = accounts[0];\n      await rideSharingContract.methods.selectRide(rideId).send({\n        from: user,\n        value: rideWei\n      });\n      setStatusMessage(\"Ride selected & paid successfully!\");\n      loadRides();\n    } catch (error) {\n      console.error(\"Error selecting ride:\", error);\n      setStatusMessage(\"Transaction failed or canceled.\");\n    }\n  };\n\n  // Filter rides to only show those with status \"Not Started\"\n  const availableRides = rides.filter(ride => ride.status === \"0\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard - Available Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadRides,\n      children: \"Refresh Rides\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this), availableRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No rides available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRides.map(ride => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), \" \", ride.source, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destination:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), \" \", ride.destination, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \" \", ride.seats, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \" \", ride.amountEth, \" ETH |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), \" \", getStatusText(ride.status)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), ride.status === \"0\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectRide(ride.id, ride.amount),\n          children: \"Select & Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, ride.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"oEWmRHypxXwWF65qr7S/Q6Uq+3c=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","web3","rideSharingContract","jsxDEV","_jsxDEV","UserDashboard","_s","rides","setRides","statusMessage","setStatusMessage","getStatusText","status","loadRides","console","log","window","ethereum","request","method","rideCount","methods","call","ridesArray","i","ride","amountEth","utils","fromWei","amount","push","length","id","driver","source","destination","seats","toWei","user","error","alert","message","interval","setInterval","clearInterval","handleSelectRide","rideId","rideWei","accounts","selectRide","send","from","value","availableRides","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/barot/OneDrive/Desktop/EcoRide/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { web3, rideSharingContract } from \"../web3\";\r\n\r\nfunction UserDashboard() {\r\n  const [rides, setRides] = useState([]);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n  const getStatusText = (status) => {\r\n    if (status === \"0\") return \"Not Started\";\r\n    if (status === \"1\") return \"Ongoing\";\r\n    if (status === \"2\") return \"Completed\";\r\n    return \"Unknown\";\r\n  };\r\n\r\n  const loadRides = async () => {\r\n    console.log(\"Inside loadRides in UserDashboard\");\r\n    try {\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      console.log(\"Requesting rideCount in UserDashboard...\");\r\n      const rideCount = await rideSharingContract.methods.rideCount().call();\r\n      console.log(\"rideCount from contract (UserDashboard):\", rideCount);\r\n\r\n      let ridesArray = [];\r\n      for (let i = 1; i <= rideCount; i++) {\r\n        const ride = await rideSharingContract.methods.rides(i).call();\r\n        ride.amountEth = web3.utils.fromWei(ride.amount, \"ether\");\r\n        ridesArray.push(ride);\r\n      }\r\n      // If no rides exist on-chain, add the default dummy ride.\r\n      if (ridesArray.length === 0) {\r\n        console.log(\"No rides found on-chain; adding dummy ride.\");\r\n        ridesArray.push({\r\n          id: \"dummy\",\r\n          driver: \"0x0000000000000000000000000000000000000000\",\r\n          source: \"Saskatoon\",\r\n          destination: \"Regina\",\r\n          seats: \"1\",\r\n          amount: web3.utils.toWei(\"0.5\", \"ether\"),\r\n          amountEth: \"0.5\",\r\n          status: \"0\", // Not Started\r\n          user: \"0x0000000000000000000000000000000000000000\"\r\n        });\r\n      }\r\n      setRides(ridesArray);\r\n    } catch (error) {\r\n      console.error(\"Error loading rides in UserDashboard:\", error);\r\n      alert(\"Error in loadRides (UserDashboard): \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRides();\r\n    // Poll every 2 seconds for new rides\r\n    const interval = setInterval(loadRides, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleSelectRide = async (rideId, rideWei) => {\r\n    try {\r\n      const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      const user = accounts[0];\r\n      await rideSharingContract.methods\r\n        .selectRide(rideId)\r\n        .send({ from: user, value: rideWei });\r\n      setStatusMessage(\"Ride selected & paid successfully!\");\r\n      loadRides();\r\n    } catch (error) {\r\n      console.error(\"Error selecting ride:\", error);\r\n      setStatusMessage(\"Transaction failed or canceled.\");\r\n    }\r\n  };\r\n\r\n  // Filter rides to only show those with status \"Not Started\"\r\n  const availableRides = rides.filter((ride) => ride.status === \"0\");\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User Dashboard - Available Rides</h2>\r\n      <button onClick={loadRides}>Refresh Rides</button>\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n      {availableRides.length === 0 ? (\r\n        <p>No rides available at the moment.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRides.map((ride) => (\r\n            <li key={ride.id} style={{ marginBottom: \"10px\" }}>\r\n              <div>\r\n                <strong>Source:</strong> {ride.source} |{\" \"}\r\n                <strong>Destination:</strong> {ride.destination} |{\" \"}\r\n                <strong>Seats:</strong> {ride.seats} |{\" \"}\r\n                <strong>Amount:</strong> {ride.amountEth} ETH |{\" \"}\r\n                <strong>Status:</strong> {getStatusText(ride.status)}\r\n              </div>\r\n              {ride.status === \"0\" && (\r\n                <button onClick={() => handleSelectRide(ride.id, ride.amount)}>\r\n                  Select &amp; Pay\r\n                </button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}